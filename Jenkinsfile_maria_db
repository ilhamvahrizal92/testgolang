pipeline {
    agent any
    environment {
        GCP_SSH_KEY = credentials('GCP_SSH_PRIVATE_KEY')
        GCP_SERVICE_ACCOUNT = credentials('gcp_service_account_storage')
        NOTIF = credentials('DISCORD')
    }
    stages {
        stage ('BACKUP DATABASE') {
            steps {
                echo "Backup Database"
                sh 'ssh -o StrictHostKeyChecking=no -i $GCP_SSH_KEY perdanar@34.101.219.62 whoami'
                sh 'ssh -o StrictHostKeyChecking=no -i $GCP_SSH_KEY perdanar@34.101.219.62 "sudo mysqldump db_customer > backup-db-customers-${BUILD_NUMBER}.sql"'
                
            }
        }
        stage ('Upload To Storage (GCS)') {
            steps {
                echo "Upload To GCS"
                sh 'scp -o StrictHostKeyChecking=no -i $GCP_SSH_KEY "$GCP_SERVICE_ACCOUNT" perdanar@34.101.219.62:~'
                sh 'ssh -o StrictHostKeyChecking=no -i $GCP_SSH_KEY perdanar@34.101.219.62 "gcloud auth activate-service-account $(cat studi-devops-370205-b498e1686c15.json | jq -r .client_email) --key-file=studi-devops-370205-b498e1686c15.json"'
                sh 'ssh -o StrictHostKeyChecking=no -i $GCP_SSH_KEY perdanar@34.101.219.62 "gsutil cp backup-db-customers-${BUILD_NUMBER}.sql gs://db_customer_storage"'
                sh 'ssh -o StrictHostKeyChecking=no -i $GCP_SSH_KEY perdanar@34.101.219.62 "rm -rf * "'
            }
        }
    }
    post {
        always {
            echo "Post Always"
        }
        success {
            echo "Post Success"
            discordSend description: "Jenkins Pipeline Backup", footer: "Backup Success", link: env.BUILD_URL, result: currentBuild.currentResult, title: JOB_NAME, webhookURL: "$NOTIF"
        }
        aborted {
            echo "Post Aborted"
            discordSend description: "Jenkins Pipeline Backup", footer: "Backup Aborted", link: env.BUILD_URL, result: currentBuild.currentResult, title: JOB_NAME, webhookURL: "$NOTIF"
        }
        failure {
            echo "Post Failure"
            discordSend description: "Jenkins Pipeline Backup", footer: "Backup Failure", link: env.BUILD_URL, result: currentBuild.currentResult, title: JOB_NAME, webhookURL: "$NOTIF"
        }
    }
}
